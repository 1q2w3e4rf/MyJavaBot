package org.example;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

import java.io.IOException;
import java.util.*;
import java.util.concurrent.ConcurrentHashMap;

public class MyTelegramBot extends TelegramLongPollingBot {
    private final String BOT_USERNAME = "";
    private final String BOT_TOKEN = "";
    private static final int UPDATE_INTERVAL = 60 * 1000; // 60 —Å–µ–∫—É–Ω–¥

    @Override
    public String getBotUsername() {
        return BOT_USERNAME;
    }

    @Override
    public String getBotToken() {
        return BOT_TOKEN;
    }

    private String[] getExchangeRate(String currencyPair) {
        String url = "https://ru.investing.com/currencies/" + currencyPair.toLowerCase();
        String[] result = new String[2];
        try {
            Document doc = Jsoup.connect(url).get();
            Elements priceElements = doc.select("div[data-test=instrument-price-last]");
            Elements percentChangeElements = doc.select("span[data-test=instrument-price-change-percent]");

            result[0] = priceElements.size() > 0 ? priceElements.get(0).text() : "–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω";
            result[1] = percentChangeElements.size() > 0 ? percentChangeElements.get(0).text() : "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ";
            return result;
        } catch (IOException e) {
            result[0] = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: " + e.getMessage();
            result[1] = "–û—à–∏–±–∫–∞";
            return result;
        }
    }



    private void handleCurrency(long chatId, String currencyPair) {
        String[] rate = getExchangeRate(currencyPair);
        if (rate != null && rate.length >= 2) {
            if (rate[0].toLowerCase().contains("–æ—à–∏–±–∫–∞") || rate[0].toLowerCase().contains("404") || rate[1].toLowerCase().contains("–æ—à–∏–±–∫–∞") || rate[1].toLowerCase().contains("404")) {
                sendMessage(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ—Ç—É –∫—É—Ä—Å–∞ –¥–ª—è " + currencyPair);
            } else {
                sendMessage(chatId, "–ö—É—Ä—Å " + currencyPair.toUpperCase() + ": " + rate[0] + "\n–ò–∑–º–µ–Ω–µ–Ω–∏–µ: " + rate[1] + "\nüòá");
            }
        }else {
            sendMessage(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ—Ç—É –∫—É—Ä—Å–∞ –¥–ª—è " + currencyPair);
        }
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText().toLowerCase();
            long chatId = update.getMessage().getChatId();
            if (messageText.equals("/usd") || messageText.equals("–¥–æ–ª–ª–∞—Ä")) {
                handleCurrency(chatId, "usd-rub");
            } else if (messageText.equals("/start")) {
                sendMessage(chatId, "üëã–ü—Ä–∏–≤–µ—Ç —è –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫—É—Ä—Å–∞ üí≤ –∏ üí∂");
            } else if (messageText.equals("/help") || messageText.equals("–ø–æ–º–æ—â—å")) {
                sendMessage(chatId, "(‚óè'‚ó°'‚óè)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/usd - –∫—É—Ä—Å USD/RUB‚úåÔ∏è\n/eur - –∫—É—Ä—Å EUR/RUB‚úåÔ∏è\n/cny - –∫—É—Ä—Å CNY/RUB‚úåÔ∏è\n/kzt - –∫—É—Ä—Å KZT/RUB‚úåÔ∏è\n/jpy - –∫—É—Ä—Å JPY/RUB‚úåÔ∏è\n/track - –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫—É—Ä—Å (–ø—Ä–∏–º–µ—Ä: /track usd, eur)\n/stop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ");
            } else if (messageText.equals("/kzt") || messageText.equals("—Ç–µ–Ω–≥–µ")){
                handleCurrency(chatId, "kzt-rub");
            } else if (messageText.equals("/jpy") || messageText.equals("–∏–µ–Ω–∞")) {
                handleCurrency(chatId, "jpy-rub");
            } else if (messageText.equals("/eur") || messageText.equals("–µ–≤—Ä–æ")) {
                handleCurrency(chatId, "eur-rub");
            } else if (messageText.equals("/cny") || messageText.equals("—é–∞–Ω—å")) {
                handleCurrency(chatId, "cny-rub");
            }

            else {
                handleCurrency(chatId, messageText);
            }
        }
    }

    private void sendMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }
}

